@inject IUsuarioClient UsuarioClient
@inject ProtectedSectionService ProtectedSectionService
@inject IToastService ToastService
@inject IMessageService MessageService

<EditForm OnValidSubmit="@SaveDados" EditContext="@_editContext" novalidate>
    <FluentValidationValidator />
    <FluentMessageBarProvider Section="MESSAGES_DIALOG" MaxMessageCount="1"></FluentMessageBarProvider>
    <FluentStack Orientation="Orientation.Vertical">
        <div style="width: 100%;">
            <FluentTextField @bind-Value="_mudarSenha.SenhaAtual" Label="Senha Atual" Required style="width: 100%;" TextFieldType="TextFieldType.Password" />
            <FluentValidationMessage For="@(() => _mudarSenha.SenhaAtual)" />
        </div>
        <div style="width: 100%;">
            <FluentTextField @bind-Value="_mudarSenha.Senha" Label="Nova Senha" style="width: 100%;" Required TextFieldType="TextFieldType.Password" />
            <FluentValidationMessage For="@(() => _mudarSenha.Senha)" />
        </div>
        <div style="width: 100%;">
            <FluentTextField @bind-Value="_mudarSenha.ConfirmarSenha" Label="Confirmar Senha" style="width: 100%;" Required TextFieldType="TextFieldType.Password" />
            <FluentValidationMessage For="@(() => _mudarSenha.ConfirmarSenha)" />
        </div>
        <FluentButton Type="ButtonType.Submit" Appearance="Appearance.Accent" Loading="_isSaving.IsLoading">Salvar</FluentButton>
    </FluentStack>
</EditForm>

@code {
    MudarMinhaSenhaCmd _mudarSenha = new MudarMinhaSenhaCmd();
    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;
    private EditContext _editContext;
    public LoadingModel _isSaving = new();

    public ChangerUserPassword()
    {
        _editContext = new EditContext(_mudarSenha);
    }

    protected override void OnInitialized()
    {
        MessageService.Clear("MESSAGES_DIALOG");
        base.OnInitialized();
    }

    private async Task SaveDados()
    {
        await ProtectedSectionService.ProtectDialog(async () =>
        {
            await UsuarioClient.MudarMinhaSenha(_mudarSenha);
            await Dialog.CloseAsync();
            ToastService.ShowSuccess("Senha modificada com sucesso.");
        }, _isSaving);
    }
}
