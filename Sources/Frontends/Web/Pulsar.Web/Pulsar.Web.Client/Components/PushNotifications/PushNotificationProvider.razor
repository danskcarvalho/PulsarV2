@using Pulsar.Web.Client.Services.PushNotifications
@inject PushNotificationManager PushNotificationManager
@inject IMessageService MessageService
@inject IToastService ToastService
@implements IDisposable

@code {
    [Parameter]
    public EventCallback<EventArgs> OnNewNotification { get; set; }

    protected override async Task OnInitializedAsync()
    {
        PushNotificationManager.OnNotificationListChanged += OnNotificationListChanged;
        PushNotificationManager.MessageService = MessageService;
        PushNotificationManager.ToastService = ToastService;
        await PushNotificationManager.Start();
    }

    private async void OnNotificationListChanged(object? sender, EventArgs e)
    {
        await OnNewNotification.InvokeAsync(e);
    }

    public void Dispose()
    {
        PushNotificationManager.OnNotificationListChanged -= OnNotificationListChanged;
    }
}
